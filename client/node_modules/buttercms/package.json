{
  "_args": [
    [
      {
        "raw": "buttercms",
        "scope": null,
        "escapedName": "buttercms",
        "name": "buttercms",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/marcstevens/Projects/personal"
    ]
  ],
  "_from": "buttercms@latest",
  "_id": "buttercms@1.1.0",
  "_inCache": true,
  "_location": "/buttercms",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/buttercms-1.1.0.tgz_1510282860698_0.6284719058312476"
  },
  "_npmUser": {
    "name": "buttercms",
    "email": "support@buttercms.com"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "buttercms",
    "scope": null,
    "escapedName": "buttercms",
    "name": "buttercms",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/buttercms/-/buttercms-1.1.0.tgz",
  "_shasum": "c5e1c7c1974a2930d83839f6ebbd34cf3459c5fd",
  "_shrinkwrap": null,
  "_spec": "buttercms",
  "_where": "/Users/marcstevens/Projects/personal",
  "author": {
    "name": "ButterCMS",
    "email": "support@buttercms.com"
  },
  "bugs": {
    "url": "https://github.com/buttercms/buttercms-js/issues"
  },
  "dependencies": {
    "axios": "0.9.1"
  },
  "description": "ButterCMS API Client",
  "devDependencies": {
    "uglify-js": "^2.8.22",
    "webpack": "^2.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c5e1c7c1974a2930d83839f6ebbd34cf3459c5fd",
    "tarball": "https://registry.npmjs.org/buttercms/-/buttercms-1.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.32"
  },
  "gitHead": "834efc194a04972c312066520b246808c8ab9336",
  "homepage": "https://github.com/buttercms/buttercms-js",
  "keywords": [
    "buttercms",
    "butter",
    "cms",
    "api"
  ],
  "license": "MIT",
  "main": "lib/butter.js",
  "maintainers": [
    {
      "name": "buttercms",
      "email": "support@buttercms.com"
    }
  ],
  "name": "buttercms",
  "optionalDependencies": {},
  "readme": "# ButterCMS JS client\n\n[![npm version](https://img.shields.io/npm/v/buttercms.svg)](https://www.npmjs.org/package/buttercms)\n\n## Documentation\n\nFor a comprehensive list of examples, check out the [API documentation](https://buttercms.com/docs/api/).\n\n## Installation\n\nRequires node.js version 4 or greater.\n\n```\nnpm install buttercms --save\n```\n\nButter can also be included directly in HTML:\n\n```html\n<script src=\"https://cdnjs.buttercms.com/buttercms-1.1.0.min.js\"></script>\n```\n\n## Overview\n\nEvery resource is accessed via your butter instance:\n\n```js\nvar butter = require('buttercms')('api_token_567abe');\n```\n\nUsing ES6:\n\n```js\nimport Butter from 'buttercms';\nconst butter = Butter('api_token_567abe');\n```\n\nUsing CDN:\n\n```html\n<script>\n  var butter = Butter('api_token_567abe');\n</script>\n```\n\nEvery resource method returns a promise:\n\n```js\n// Get blog posts\nbutter.post.list({page: 1, page_size: 10}).then(function(response) {\n  console.log(response)\n})\n\n// Get blog post\nbutter.post.retrieve(\"hello-world\").then(function(response) {\n  console.log(response)\n})\n\n// Get homepage content\nbutter.content.retrieve([\"home\"]).then(function(resp) {\n  console.log(resp)\n});\n\n// Get pages\nbutter.content.retrieve([\"pages\"]).then(function(resp) {\n  console.log(resp)\n});\n```\n\nSee our [node app](https://github.com/buttercms/nodejs-cms-express-blog) for a full example.\n\n## Available resources & methods\n\nWhere you see params it is a plain js object, e.g. `{page: 1}`\n\n* post\n  * `retrieve(slug[, params])`\n  * `list([params])`\n  * `search(query[, params])`\n* category\n  * `retrieve(slug[, params])`\n  * `list([params])`\n* tag\n  * `retrieve(slug[, params])`\n  * `list([params])`\n* author\n  * `retrieve(slug[, params])`\n  * `list([params])`\n* feed\n  * `retrieve(type[, params])`\n* content\n  * `retrieve(keys)`\n* page\n  * `retrieve(page_type, page_slug[, params])`\n  * `list(page_type[, params])`\n\n## Localization\n\nSetup locales in the ButterCMS dashboard and fetch localized content using the locale option:\n\n\n```js\n// Get pages\nbutter.content.retrieve([\"pages\"], {locale: 'es'}).then(function(resp) {\n  console.log(resp)\n});\n```\n\n## Test mode\n\nTest mode can be used to setup a staging website for previewing content or for testing content during local development. To fetch content from test mode add an additional argument, `true`, to the package initialization:\n\n```js\nvar butter = require('buttercms')('your butter API token', true);\n```\n\nOr use an environment variable:\n\n```js\nvar butter = require('buttercms')('your butter API token', process.env.BUTTER_TEST_MODE);\n```\n\n## Timeouts\n\nThe default timeout threshold is 3000ms but you can change it:\n\n```js\nvar butter = require('buttercms')('your butter API token', false, 5000);\n```\n\n## Documentation\n\nDocumentation is available at https://buttercms.com/docs/api/node\n\n### Other\n\nView NodeJS [Blog engine](https://buttercms.com/nodejs-blog-engine/) and [Full CMS](https://buttercms.com/nodejs-cms/) for other examples of using ButterCMS with NodeJS.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/buttercms/buttercms-js.git"
  },
  "scripts": {
    "build": "webpack && uglifyjs ./dist/butter.js -c -m -o ./dist/butter.min.js"
  },
  "version": "1.1.0"
}

{
  "_args": [
    [
      {
        "raw": "unist-util-is@^2.1.1",
        "scope": null,
        "escapedName": "unist-util-is",
        "name": "unist-util-is",
        "rawSpec": "^2.1.1",
        "spec": ">=2.1.1 <3.0.0",
        "type": "range"
      },
      "/Users/marcstevens/Projects/personal/node_modules/unist-util-visit"
    ]
  ],
  "_from": "unist-util-is@>=2.1.1 <3.0.0",
  "_id": "unist-util-is@2.1.1",
  "_inCache": true,
  "_location": "/unist-util-is",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/unist-util-is-2.1.1.tgz_1497291889332_0.15806019911542535"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "unist-util-is@^2.1.1",
    "scope": null,
    "escapedName": "unist-util-is",
    "name": "unist-util-is",
    "rawSpec": "^2.1.1",
    "spec": ">=2.1.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/unist-util-visit"
  ],
  "_resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-2.1.1.tgz",
  "_shasum": "0c312629e3f960c66e931e812d3d80e77010947b",
  "_shrinkwrap": null,
  "_spec": "unist-util-is@^2.1.1",
  "_where": "/Users/marcstevens/Projects/personal/node_modules/unist-util-visit",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/hast-util-to-html/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {},
  "description": "Utility to check if a node passes a test",
  "devDependencies": {
    "browserify": "^14.0.0",
    "esmangle": "^1.0.1",
    "nyc": "^11.0.0",
    "remark-cli": "^3.0.0",
    "remark-preset-wooorm": "^3.0.0",
    "tape": "^4.0.0",
    "xo": "^0.18.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0c312629e3f960c66e931e812d3d80e77010947b",
    "tarball": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-2.1.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "aadf28501b95a799f0ab40fdecbdb4708044884d",
  "homepage": "https://github.com/syntax-tree/unist-util-is#readme",
  "keywords": [
    "unist",
    "node",
    "is",
    "equal",
    "test",
    "type",
    "util",
    "utility"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "unist-util-is",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# unist-util-is [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n[**Unist**][unist] utility to check if a node passes a test.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-is\n```\n\n## Usage\n\n```js\nvar is = require('unist-util-is');\n\nvar node = {type: 'strong'};\nvar parent = {type: 'paragraph', children: [node]};\n\nfunction test(node, n) { return n === 5 }\n\nis(); // false\nis(null, {children: []}); // false\nis(null, node); // true\nis('strong', node); // true\nis('emphasis', node); // false\n\nis(node, node) // true\nis({type: 'paragraph'}, parent) // true\nis({type: 'strong'}, parent) // false\n\nis(test, node); // false\nis(test, node, 4, parent); // false\nis(test, node, 5, parent); // true\n```\n\n## API\n\n### `is(test, node[, index, parent[, context]])`\n\n###### Parameters\n\n*   `test` ([`Function`][test], `string`, `Object`, or `Array.<Test>`, optional)\n    —  When not given, checks if `node` is a [`Node`][node].\n    When `string`, works like passing `function (node) {return\n    node.type === test}`.\n    When `array`, checks any one of the subtests pass.\n    When `object`, checks that all keys in `test` are in `node`,\n    and that they have (strictly) equal values\n*   `node` ([`Node`][node]) — Node to check.  `false` is returned\n*   `index` (`number`, optional) — Position of `node` in `parent`\n*   `parent` (`Node`, optional) — Parent of `node`\n*   `context` (`*`, optional) — Context object to invoke `test` with\n\n###### Returns\n\n`boolean` — Whether `test` passed _and_ `node` is a [`Node`][node] (object\nwith `type` set to non-empty `string`).\n\n#### `function test(node[, index, parent])`\n\n###### Parameters\n\n*   `node` (`Node`) — Node to test\n*   `index` (`number?`) — Position of `node` in `parent`\n*   `parent` (`Node?`) — Parent of `node`\n\n###### Context\n\n`*` — The to `is` given `context`.\n\n###### Returns\n\n`boolean?` — Whether `node` matches.\n\n## Related\n\n*   [`unist-util-find-after`](https://github.com/syntax-tree/unist-util-find-after)\n    — Find a node after another node\n*   [`unist-util-find-before`](https://github.com/syntax-tree/unist-util-find-before)\n    — Find a node before another node\n*   [`unist-util-find-all-after`](https://github.com/syntax-tree/unist-util-find-all-after)\n    — Find all nodes after another node\n*   [`unist-util-find-all-before`](https://github.com/syntax-tree/unist-util-find-all-before)\n    — Find all nodes before another node\n*   [`unist-util-find-all-between`](https://github.com/mrzmmr/unist-util-find-all-between)\n    — Find all nodes between two nodes\n*   [`unist-util-find`](https://github.com/blahah/unist-util-find)\n    — Find nodes matching a predicate\n*   [`unist-util-filter`](https://github.com/eush77/unist-util-filter)\n    — Create a new tree with nodes that pass a check\n*   [`unist-util-remove`](https://github.com/eush77/unist-util-remove)\n    — Remove nodes from tree\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/unist-util-is.svg\n\n[travis]: https://travis-ci.org/syntax-tree/unist-util-is\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-is.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/unist-util-is\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[test]: #function-testnode-index-parent\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/unist-util-is.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s unistUtilIs > unist-util-is.js",
    "build-mangle": "esmangle < unist-util-is.js > unist-util-is.min.js",
    "build-md": "remark . -qfo",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "2.1.1",
  "xo": {
    "space": true,
    "esnext": false,
    "rules": {
      "unicorn/prefer-type-error": "off"
    },
    "ignore": [
      "unist-util-is.js"
    ]
  }
}
